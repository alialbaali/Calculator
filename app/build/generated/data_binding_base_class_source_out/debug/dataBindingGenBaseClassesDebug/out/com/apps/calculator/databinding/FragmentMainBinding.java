// Generated by data binding compiler. Do not edit!
package com.apps.calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.apps.calculator.R;
import com.apps.calculator.viewmodel.MainViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentMainBinding extends ViewDataBinding {
  @NonNull
  public final Button button0;

  @NonNull
  public final Button button1;

  @NonNull
  public final Button button2;

  @NonNull
  public final Button button3;

  @NonNull
  public final Button button4;

  @NonNull
  public final Button button5;

  @NonNull
  public final Button button6;

  @NonNull
  public final Button button7;

  @NonNull
  public final Button button8;

  @NonNull
  public final Button button9;

  @NonNull
  public final Button clearButton;

  @NonNull
  public final Button divisionButton;

  @NonNull
  public final Button dotButton;

  @NonNull
  public final Button equalButton;

  @NonNull
  public final Button minusButton;

  @NonNull
  public final Button multiplyButton;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView operationView;

  @NonNull
  public final Button parenthesisButton;

  @NonNull
  public final Button percentageButton;

  @NonNull
  public final Button plusButton;

  @NonNull
  public final Button plusMinusButton;

  @NonNull
  public final TextView resultView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TableRow tableRow;

  @Bindable
  protected MainViewModel mMainViewModel;

  protected FragmentMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button button0, Button button1, Button button2, Button button3, Button button4,
      Button button5, Button button6, Button button7, Button button8, Button button9,
      Button clearButton, Button divisionButton, Button dotButton, Button equalButton,
      Button minusButton, Button multiplyButton, TextView operationView, Button parenthesisButton,
      Button percentageButton, Button plusButton, Button plusMinusButton, TextView resultView,
      TableRow tableRow) {
    super(_bindingComponent, _root, _localFieldCount);
    this.button0 = button0;
    this.button1 = button1;
    this.button2 = button2;
    this.button3 = button3;
    this.button4 = button4;
    this.button5 = button5;
    this.button6 = button6;
    this.button7 = button7;
    this.button8 = button8;
    this.button9 = button9;
    this.clearButton = clearButton;
    this.divisionButton = divisionButton;
    this.dotButton = dotButton;
    this.equalButton = equalButton;
    this.minusButton = minusButton;
    this.multiplyButton = multiplyButton;
    this.operationView = operationView;
    this.parenthesisButton = parenthesisButton;
    this.percentageButton = percentageButton;
    this.plusButton = plusButton;
    this.plusMinusButton = plusMinusButton;
    this.resultView = resultView;
    this.tableRow = tableRow;
  }

  public abstract void setMainViewModel(@Nullable MainViewModel mainViewModel);

  @Nullable
  public MainViewModel getMainViewModel() {
    return mMainViewModel;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentMainBinding>inflateInternal(inflater, R.layout.fragment_main, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentMainBinding>inflateInternal(inflater, R.layout.fragment_main, null, false, component);
  }

  public static FragmentMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentMainBinding)bind(component, view, R.layout.fragment_main);
  }
}
